{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React\\\\alkemy-wallet\\\\react-wallet\\\\src\\\\components\\\\Balance.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { db } from \"../firebase\";\nimport Swal from \"sweetalert2\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Balance = () => {\n  _s();\n\n  var bal = 0;\n  const [operations, setOperation] = useState([]);\n  useEffect(() => {\n    getOperations();\n  }, []); // Procedimiento para traer todas las operaciones\n\n  const getOperations = async () => {\n    try {\n      const docs = [];\n      const querySnapshot = await db.collection(\"operations\").get();\n      querySnapshot.forEach(doc => {\n        docs.push({ ...doc.data(),\n          id: doc.id\n        });\n      });\n      setOperation(docs);\n    } catch (error) {\n      console.log(error);\n      Swal.fire({\n        icon: \"error\",\n        title: \"Oops...\",\n        text: \"Something went wrong, try again later...\"\n      });\n    }\n  };\n\n  operations.map(operation => {\n    if (operation.type === \"expense\") {\n      bal -= parseInt(operation.amount);\n    } else {\n      bal += parseInt(operation.amount);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"$\", bal, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Balance, \"4BHdINIpShqLho8gqQmCBy/LGQo=\");\n\n_c = Balance;\nexport default Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"names":["useState","useEffect","db","Swal","Spinner","Balance","bal","operations","setOperation","getOperations","docs","querySnapshot","collection","get","forEach","doc","push","data","id","error","console","log","fire","icon","title","text","map","operation","type","parseInt","amount"],"sources":["D:/Projects/React/alkemy-wallet/react-wallet/src/components/Balance.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport { db } from \"../firebase\";\r\nimport Swal from \"sweetalert2\";\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst Balance = () => {\r\n  var bal = 0;\r\n\r\n  const [operations, setOperation] = useState([]);\r\n  useEffect(() => {\r\n    getOperations();\r\n  }, []);\r\n\r\n  // Procedimiento para traer todas las operaciones\r\n  const getOperations = async () => {\r\n    try {\r\n      const docs = [];\r\n      const querySnapshot = await db.collection(\"operations\").get();\r\n      querySnapshot.forEach((doc) => {\r\n        docs.push({ ...doc.data(), id: doc.id });\r\n      });\r\n      setOperation(docs);\r\n    } catch (error) {\r\n      console.log(error);\r\n      Swal.fire({\r\n        icon: \"error\",\r\n        title: \"Oops...\",\r\n        text: \"Something went wrong, try again later...\",\r\n      });\r\n    }\r\n  };\r\n\r\n  operations.map((operation) => {\r\n    if (operation.type === \"expense\") {\r\n      bal -= parseInt(operation.amount);\r\n    } else {\r\n      bal += parseInt(operation.amount);\r\n    }\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h1>${bal} </h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Balance;\r\n"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,EAAT,QAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAM;EAAA;;EACpB,IAAIC,GAAG,GAAG,CAAV;EAEA,MAAM,CAACC,UAAD,EAAaC,YAAb,IAA6BR,QAAQ,CAAC,EAAD,CAA3C;EACAC,SAAS,CAAC,MAAM;IACdQ,aAAa;EACd,CAFQ,EAEN,EAFM,CAAT,CAJoB,CAQpB;;EACA,MAAMA,aAAa,GAAG,YAAY;IAChC,IAAI;MACF,MAAMC,IAAI,GAAG,EAAb;MACA,MAAMC,aAAa,GAAG,MAAMT,EAAE,CAACU,UAAH,CAAc,YAAd,EAA4BC,GAA5B,EAA5B;MACAF,aAAa,CAACG,OAAd,CAAuBC,GAAD,IAAS;QAC7BL,IAAI,CAACM,IAAL,CAAU,EAAE,GAAGD,GAAG,CAACE,IAAJ,EAAL;UAAiBC,EAAE,EAAEH,GAAG,CAACG;QAAzB,CAAV;MACD,CAFD;MAGAV,YAAY,CAACE,IAAD,CAAZ;IACD,CAPD,CAOE,OAAOS,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACAhB,IAAI,CAACmB,IAAL,CAAU;QACRC,IAAI,EAAE,OADE;QAERC,KAAK,EAAE,SAFC;QAGRC,IAAI,EAAE;MAHE,CAAV;IAKD;EACF,CAhBD;;EAkBAlB,UAAU,CAACmB,GAAX,CAAgBC,SAAD,IAAe;IAC5B,IAAIA,SAAS,CAACC,IAAV,KAAmB,SAAvB,EAAkC;MAChCtB,GAAG,IAAIuB,QAAQ,CAACF,SAAS,CAACG,MAAX,CAAf;IACD,CAFD,MAEO;MACLxB,GAAG,IAAIuB,QAAQ,CAACF,SAAS,CAACG,MAAX,CAAf;IACD;EACF,CAND;EAQA,oBACE;IAAA,uBACE;MAAA,gBAAMxB,GAAN;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAKD,CAxCD;;GAAMD,O;;KAAAA,O;AA0CN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}