{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\React\\\\alkemy-wallet\\\\react-wallet\\\\src\\\\components\\\\Balance.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { db } from '../firebase';\nimport Swal from 'sweetalert2';\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Balance = () => {\n  _s();\n\n  var bal = 0;\n  const [operations, setOperation] = useState([]);\n  const [loader, setLoader] = useState(true);\n  const [balance, setBalance] = useState(0);\n  useEffect(() => {\n    getOperations();\n  }, []); // Procedimiento para traer todas las operaciones\n\n  const getOperations = async () => {\n    try {\n      const docs = [];\n      const querySnapshot = await db.collection('operations').get();\n      querySnapshot.forEach(doc => {\n        docs.push({ ...doc.data(),\n          id: doc.id\n        });\n      });\n      setOperation(docs);\n      setLoader(false);\n      updateBalance();\n    } catch (error) {\n      console.log(error);\n      Swal.fire({\n        icon: 'error',\n        title: 'Oops...',\n        text: 'Something went wrong, try again later...'\n      });\n    }\n  };\n\n  const updateBalance = () => {\n    operations.map(operation => {\n      if (operation.type === 'expense') {\n        bal -= parseInt(operation.amount);\n      } else {\n        bal += parseInt(operation.amount);\n      }\n    });\n    console.log(bal);\n    setBalance(bal);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: loader ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mx-auto\",\n      children: /*#__PURE__*/_jsxDEV(Spinner, {\n        animation: \"grow\",\n        variant: \"light\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"$\", balance, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Balance, \"gS9EeRswgG1p5TM8zvhtRA3RGoY=\");\n\n_c = Balance;\nexport default Balance;\n\nvar _c;\n\n$RefreshReg$(_c, \"Balance\");","map":{"version":3,"names":["useState","useEffect","db","Swal","Spinner","Balance","bal","operations","setOperation","loader","setLoader","balance","setBalance","getOperations","docs","querySnapshot","collection","get","forEach","doc","push","data","id","updateBalance","error","console","log","fire","icon","title","text","map","operation","type","parseInt","amount"],"sources":["D:/Projects/React/alkemy-wallet/react-wallet/src/components/Balance.jsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport {db} from '../firebase'\r\nimport Swal from 'sweetalert2'\r\nimport Spinner from \"react-bootstrap/Spinner\";\r\n\r\nconst Balance = ()=>{\r\n    \r\n    var bal = 0\r\n    \r\n    const [operations, setOperation] = useState([])\r\n    const [loader, setLoader] = useState(true)\r\n    const [balance, setBalance] = useState(0)\r\n\r\n    useEffect(()=>{\r\n        getOperations()\r\n        \r\n    }, [])\r\n\r\n    // Procedimiento para traer todas las operaciones\r\n    const getOperations = async () => {\r\n\r\n        try {\r\n        const docs = [];\r\n        const querySnapshot = await db.collection('operations').get()\r\n            querySnapshot.forEach(doc=>{\r\n                docs.push({...doc.data(), id:doc.id})\r\n            })\r\n            setOperation(docs)\r\n            setLoader(false)\r\n            updateBalance()\r\n        } catch(error) {\r\n            console.log(error)\r\n            Swal.fire({\r\n                icon: 'error',\r\n                title: 'Oops...',\r\n                text: 'Something went wrong, try again later...',\r\n              })\r\n        }\r\n    }\r\n\r\n    const updateBalance = () =>{\r\n     operations.map((operation) =>{\r\n        if(operation.type === 'expense'){\r\n            bal -= parseInt(operation.amount)\r\n        } else {\r\n            bal += parseInt(operation.amount)\r\n        }\r\n    }\r\n    )\r\n     console.log(bal)\r\n     setBalance(bal)\r\n    }\r\n    \r\n    \r\n\r\n    \r\n    return(\r\n    <div>\r\n        {loader ? (\r\n            <div className=\"mx-auto\">\r\n              <Spinner animation=\"grow\" variant=\"light\" />\r\n            </div>\r\n          ) : (\r\n        <h1>${balance} </h1>\r\n        )}\r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Balance"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAAQC,EAAR,QAAiB,aAAjB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,OAAP,MAAoB,yBAApB;;;AAEA,MAAMC,OAAO,GAAG,MAAI;EAAA;;EAEhB,IAAIC,GAAG,GAAG,CAAV;EAEA,MAAM,CAACC,UAAD,EAAaC,YAAb,IAA6BR,QAAQ,CAAC,EAAD,CAA3C;EACA,MAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAC,IAAD,CAApC;EACA,MAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,CAAD,CAAtC;EAEAC,SAAS,CAAC,MAAI;IACVY,aAAa;EAEhB,CAHQ,EAGN,EAHM,CAAT,CARgB,CAahB;;EACA,MAAMA,aAAa,GAAG,YAAY;IAE9B,IAAI;MACJ,MAAMC,IAAI,GAAG,EAAb;MACA,MAAMC,aAAa,GAAG,MAAMb,EAAE,CAACc,UAAH,CAAc,YAAd,EAA4BC,GAA5B,EAA5B;MACIF,aAAa,CAACG,OAAd,CAAsBC,GAAG,IAAE;QACvBL,IAAI,CAACM,IAAL,CAAU,EAAC,GAAGD,GAAG,CAACE,IAAJ,EAAJ;UAAgBC,EAAE,EAACH,GAAG,CAACG;QAAvB,CAAV;MACH,CAFD;MAGAd,YAAY,CAACM,IAAD,CAAZ;MACAJ,SAAS,CAAC,KAAD,CAAT;MACAa,aAAa;IAChB,CATD,CASE,OAAMC,KAAN,EAAa;MACXC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACArB,IAAI,CAACwB,IAAL,CAAU;QACNC,IAAI,EAAE,OADA;QAENC,KAAK,EAAE,SAFD;QAGNC,IAAI,EAAE;MAHA,CAAV;IAKH;EACJ,CAnBD;;EAqBA,MAAMP,aAAa,GAAG,MAAK;IAC1BhB,UAAU,CAACwB,GAAX,CAAgBC,SAAD,IAAc;MAC1B,IAAGA,SAAS,CAACC,IAAV,KAAmB,SAAtB,EAAgC;QAC5B3B,GAAG,IAAI4B,QAAQ,CAACF,SAAS,CAACG,MAAX,CAAf;MACH,CAFD,MAEO;QACH7B,GAAG,IAAI4B,QAAQ,CAACF,SAAS,CAACG,MAAX,CAAf;MACH;IACJ,CANA;IAQAV,OAAO,CAACC,GAAR,CAAYpB,GAAZ;IACAM,UAAU,CAACN,GAAD,CAAV;EACA,CAXD;;EAgBA,oBACA;IAAA,UACKG,MAAM,gBACH;MAAK,SAAS,EAAC,SAAf;MAAA,uBACE,QAAC,OAAD;QAAS,SAAS,EAAC,MAAnB;QAA0B,OAAO,EAAC;MAAlC;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADG,gBAKP;MAAA,gBAAME,OAAN;IAAA;MAAA;MAAA;MAAA;IAAA;EANJ;IAAA;IAAA;IAAA;EAAA,QADA;AAYH,CA/DD;;GAAMN,O;;KAAAA,O;AAiEN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}